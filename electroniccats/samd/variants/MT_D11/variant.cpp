/*
  Copyright (c) 2014-2015 Arduino LLC.  All right reserved.

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/

/*
 * Modified 26 April 2018 by Justin Mattair
 *   for MattairTech boards (www.mattairtech.com)
 *
 * See README.md for documentation and pin mapping information
 */


#include "variant.h"

/*
 * Pins descriptions
 */
#if defined(PIN_MAP_STANDARD)
#if defined(PIN_DESCRIPTION_TABLE_SIMPLE)
const PinDescription g_APinDescription[]=
{
        // 0..1 pins don't exist
        { SetPortPin( NOT_A_PORT, 0 ), PER_ATTR_NONE, NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_NONE, No_ADC_Channel ) }, // Unused
        { SetPortPin( NOT_A_PORT, 0 ), PER_ATTR_NONE, NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_NONE, No_ADC_Channel ) }, // Unused

        // 2..7 - Analog capable pins (DAC available on 0)
        { SetPortPin( PORTA, 2 ), PER_ATTR_DRIVE_STRONG, NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_NONE, ADC_Channel0 ) },
        { SetPortPin( PORTA, 3 ), PER_ATTR_DRIVE_STRONG, NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_NONE, ADC_Channel1 ) },
        { SetPortPin( PORTA, 4 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_ALT), TCC0_CH0, SetExtIntADC( EXTERNAL_INT_4, ADC_Channel2 ) },
        { SetPortPin( PORTA, 5 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_ALT), TCC0_CH1, SetExtIntADC( EXTERNAL_INT_5, ADC_Channel3 ) },
        { SetPortPin( PORTA, 6 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_ALT), TCC0_CH2, SetExtIntADC( EXTERNAL_INT_NONE, ADC_Channel4 ) },
        { SetPortPin( PORTA, 7 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_ALT), TCC0_CH3, SetExtIntADC( EXTERNAL_INT_NONE, ADC_Channel5 ) },

        // 8..9 are unused (pins in use by 32.768KHz crystal, which in turn is used by the Arduino core)
        { SetPortPin( NOT_A_PORT, 0 ), PER_ATTR_NONE, NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_NONE, No_ADC_Channel ) }, // Unused
        { SetPortPin( NOT_A_PORT, 0 ), PER_ATTR_NONE, NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_NONE, No_ADC_Channel ) }, // Unused

        // 10..11 - SERCOM/SPI (SPI) or Analog or Digital functions (Button available on pin 9)
        { SetPortPin( PORTA, 10 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_SERCOM_STD), NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_2, ADC_Channel8 ) }, // SPI MOSI
        { SetPortPin( PORTA, 11 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_SERCOM_STD), NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_NONE, ADC_Channel9 ) }, // SPI SCK

        // 12..13 pins don't exist
        { SetPortPin( NOT_A_PORT, 0 ), PER_ATTR_NONE, NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_NONE, No_ADC_Channel ) }, // Unused
        { SetPortPin( NOT_A_PORT, 0 ), PER_ATTR_NONE, NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_NONE, No_ADC_Channel ) }, // Unused

        // 14..15 - SERCOM/SPI (SPI) or Analog or Digital functions (Button available on pin 15)
        { SetPortPin( PORTA, 14 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_SERCOM_STD), NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_NONE, ADC_Channel6 ) }, // SPI MISO
        { SetPortPin( PORTA, 15 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_SERCOM_STD), NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_1, ADC_Channel7 ) }, // Button / SPI SS (unused)

        // 16..17 Digital functions (LED available on pin 10)
        { SetPortPin( PORTA, 16 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_STD), TC1_CH0, SetExtIntADC( EXTERNAL_INT_0, No_ADC_Channel ) }, // LED
        { SetPortPin( PORTA, 17 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_STD), TC1_CH1, SetExtIntADC( EXTERNAL_INT_NONE, No_ADC_Channel ) },

        // 18..21 pins don't exist
        { SetPortPin( NOT_A_PORT, 0 ), PER_ATTR_NONE, NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_NONE, No_ADC_Channel ) }, // Unused
        { SetPortPin( NOT_A_PORT, 0 ), PER_ATTR_NONE, NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_NONE, No_ADC_Channel ) }, // Unused
        { SetPortPin( NOT_A_PORT, 0 ), PER_ATTR_NONE, NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_NONE, No_ADC_Channel ) }, // Unused
        { SetPortPin( NOT_A_PORT, 0 ), PER_ATTR_NONE, NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_NONE, No_ADC_Channel ) }, // Unused

        // 22..23 SERCOM/I2C (Wire) or Digital functions
        { SetPortPin( PORTA, 22 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_SERCOM_ALT), NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_6, No_ADC_Channel ) }, // SDA
        { SetPortPin( PORTA, 23 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_SERCOM_ALT), NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_NONE, No_ADC_Channel ) }, // SCL

        // 24..26 are unused (25 and 26 in use by USB_NEGATIVE and USB_POSITIVE, pin 26 does not exist)
        { SetPortPin( PORTA, 24 ), PER_ATTR_DRIVE_STRONG, NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_NONE, No_ADC_Channel ) }, // USB/DM
        { SetPortPin( PORTA, 25 ), PER_ATTR_DRIVE_STRONG, NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_NONE, No_ADC_Channel ) }, // USB/DP
        { SetPortPin( NOT_A_PORT, 0 ), PER_ATTR_NONE, NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_NONE, No_ADC_Channel ) }, // Unused

        // 27..29 Digital functions (pin 28 is Reset and pin 29 does not exist)
        { SetPortPin( PORTA, 27 ), PER_ATTR_DRIVE_STRONG, NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_7, No_ADC_Channel ) },
        { SetPortPin( PORTA, 28 ), PER_ATTR_DRIVE_STRONG, NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_NONE, No_ADC_Channel ) }, // Unused (Reset)
        { SetPortPin( NOT_A_PORT, 0 ), PER_ATTR_NONE, NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_NONE, No_ADC_Channel ) }, // Unused

        // 30..31  SERCOM/UART (Serial1) or Digital functions or Debug interface (SWD CLK and SWD IO)
        { SetPortPin( PORTA, 30 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_STD|PER_ATTR_SERCOM_ALT), TC2_CH0, SetExtIntADC( EXTERNAL_INT_NONE, No_ADC_Channel ) }, // TX / SWD CLK
        { SetPortPin( PORTA, 31 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_STD|PER_ATTR_SERCOM_ALT), TC2_CH1, SetExtIntADC( EXTERNAL_INT_3, No_ADC_Channel ) }, // RX / SWD IO
} ;
#else
const PinDescription g_APinDescription[]=
{
	// 0..1 pins don't exist
	{ NOT_A_PORT,  0, PIO_NOT_A_PIN, PER_ATTR_NONE, PIN_ATTR_NONE, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // Unused
	{ NOT_A_PORT,  0, PIO_NOT_A_PIN, PER_ATTR_NONE, PIN_ATTR_NONE, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // Unused
	
	// 2..7 - Analog capable pins (DAC available on 2)
	{ PORTA,  2, PIO_MULTI, PER_ATTR_DRIVE_STRONG, (PIN_ATTR_ADC|PIN_ATTR_DAC|PIN_ATTR_DIGITAL), NOT_ON_TIMER, ADC_Channel0, EXTERNAL_INT_NONE, GCLK_CCL_NONE },
	{ PORTA,  3, PIO_MULTI, PER_ATTR_DRIVE_STRONG, (PIN_ATTR_ADC|PIN_ATTR_REF|PIN_ATTR_DIGITAL), NOT_ON_TIMER, ADC_Channel1, EXTERNAL_INT_NONE, GCLK_CCL_NONE },
	{ PORTA,  4, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_ALT), (PIN_ATTR_ADC|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER|PIN_ATTR_EXTINT), TCC0_CH0, ADC_Channel2, EXTERNAL_INT_4, GCLK_CCL_NONE },
	{ PORTA,  5, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_ALT), (PIN_ATTR_ADC|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER|PIN_ATTR_EXTINT), TCC0_CH1, ADC_Channel3, EXTERNAL_INT_5, GCLK_CCL_NONE },
	{ PORTA,  6, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_ALT), (PIN_ATTR_ADC|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), TCC0_CH2, ADC_Channel4, EXTERNAL_INT_NONE, GCLK_CCL_NONE },
	{ PORTA,  7, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_ALT), (PIN_ATTR_ADC|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), TCC0_CH3, ADC_Channel5, EXTERNAL_INT_NONE, GCLK_CCL_NONE },
	
	// 8..9 are unused (pins in use by 32.768KHz crystal, which in turn is used by the Arduino core)
	{ NOT_A_PORT,  0, PIO_NOT_A_PIN, PER_ATTR_NONE, PIN_ATTR_NONE, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // Unused
	{ NOT_A_PORT,  0, PIO_NOT_A_PIN, PER_ATTR_NONE, PIN_ATTR_NONE, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // Unused
	
	// 10..11 - SERCOM/SPI (SPI) or Analog or Digital functions
	{ PORTA, 10, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_SERCOM_STD), (PIN_ATTR_ADC|PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM|PIN_ATTR_EXTINT), NOT_ON_TIMER, ADC_Channel8, EXTERNAL_INT_2, GCLK_CCL_NONE }, // SPI MOSI
	{ PORTA, 11, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_SERCOM_STD), (PIN_ATTR_ADC|PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM), NOT_ON_TIMER, ADC_Channel9, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // SPI SCK
	
	// 12..13 pins don't exist
	{ NOT_A_PORT,  0, PIO_NOT_A_PIN, PER_ATTR_NONE, PIN_ATTR_NONE, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // Unused
	{ NOT_A_PORT,  0, PIO_NOT_A_PIN, PER_ATTR_NONE, PIN_ATTR_NONE, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // Unused
	
	// 14..15 - SERCOM/SPI (SPI) or Analog or Digital functions (Button available on pin 15)
	{ PORTA, 14, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_SERCOM_STD), (PIN_ATTR_ADC|PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM|PIN_ATTR_EXTINT), NOT_ON_TIMER, ADC_Channel6, EXTERNAL_INT_NMI, GCLK_CCL_NONE }, // SPI MISO
	{ PORTA, 15, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_SERCOM_STD), (PIN_ATTR_ADC|PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM|PIN_ATTR_EXTINT), NOT_ON_TIMER, ADC_Channel7, EXTERNAL_INT_1, GCLK_CCL_NONE }, // Button / SPI SS (unused)
	
	// 16..17 Digital functions (LED available on pin 16)
	{ PORTA, 16, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_STD), (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER|PIN_ATTR_EXTINT), TC1_CH0, No_ADC_Channel, EXTERNAL_INT_0, GCLK_CCL_NONE }, // LED
	{ PORTA, 17, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_STD), (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), TC1_CH1, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE },
	
	// 18..21 pins don't exist
	{ NOT_A_PORT,  0, PIO_NOT_A_PIN, PER_ATTR_NONE, PIN_ATTR_NONE, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // Unused
	{ NOT_A_PORT,  0, PIO_NOT_A_PIN, PER_ATTR_NONE, PIN_ATTR_NONE, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // Unused
	{ NOT_A_PORT,  0, PIO_NOT_A_PIN, PER_ATTR_NONE, PIN_ATTR_NONE, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // Unused
	{ NOT_A_PORT,  0, PIO_NOT_A_PIN, PER_ATTR_NONE, PIN_ATTR_NONE, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // Unused
	
	// 22..23 SERCOM/I2C (Wire) or Digital functions
	{ PORTA, 22, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_SERCOM_ALT), (PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM|PIN_ATTR_EXTINT), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_6, GCLK_CCL_NONE }, // SDA
	{ PORTA, 23, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_SERCOM_ALT), (PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // SCL
	
	// 24..26 are unused (25 and 26 in use by USB_NEGATIVE and USB_POSITIVE, pin 26 does not exist)
	{ PORTA, 24, PIO_MULTI, PER_ATTR_DRIVE_STRONG, (PIN_ATTR_DIGITAL|PIN_ATTR_COM), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // USB/DM
	{ PORTA, 25, PIO_MULTI, PER_ATTR_DRIVE_STRONG, (PIN_ATTR_DIGITAL|PIN_ATTR_COM), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // USB/DP
	{ NOT_A_PORT,  0, PIO_NOT_A_PIN, PER_ATTR_NONE, PIN_ATTR_NONE, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // Unused
	
	// 27..29 Digital functions (pin 28 is Reset and pin 29 does not exist)
	{ PORTA, 27, PIO_MULTI, PER_ATTR_DRIVE_STRONG, (PIN_ATTR_DIGITAL|PIN_ATTR_EXTINT), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_7, GCLK_CCL_NONE },
	{ PORTA, 28, PIO_MULTI, PER_ATTR_DRIVE_STRONG, PIN_ATTR_DIGITAL, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // Unused (Reset)
	{ NOT_A_PORT,  0, PIO_NOT_A_PIN, PER_ATTR_NONE, PIN_ATTR_NONE, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // Unused
	
	// 30..31  SERCOM/UART (Serial1) or Digital functions or Debug interface (SWD CLK and SWD IO)
	{ PORTA, 30, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_STD|PER_ATTR_SERCOM_ALT), (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER|PIN_ATTR_SERCOM), TC2_CH0, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // TX / SWD CLK
	{ PORTA, 31, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_STD|PER_ATTR_SERCOM_ALT), (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER|PIN_ATTR_SERCOM|PIN_ATTR_EXTINT), TC2_CH1, No_ADC_Channel, EXTERNAL_INT_3, GCLK_CCL_NONE }, // RX / SWD IO
} ;
#endif
#elif defined(PIN_MAP_COMPACT)
#if defined(PIN_DESCRIPTION_TABLE_SIMPLE)
const PinDescription g_APinDescription[]=
{
        // 0..5 - Analog capable pins (DAC available on 0)
        { SetPortPin( PORTA, 2 ), PER_ATTR_DRIVE_STRONG, NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_NONE, ADC_Channel0 ) },
        { SetPortPin( PORTA, 3 ), PER_ATTR_DRIVE_STRONG, NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_NONE, ADC_Channel1 ) },
        { SetPortPin( PORTA, 4 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_ALT), TCC0_CH0, SetExtIntADC( EXTERNAL_INT_4, ADC_Channel2 ) },
        { SetPortPin( PORTA, 5 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_ALT), TCC0_CH1, SetExtIntADC( EXTERNAL_INT_5, ADC_Channel3 ) },
        { SetPortPin( PORTA, 6 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_ALT), TCC0_CH2, SetExtIntADC( EXTERNAL_INT_NONE, ADC_Channel4 ) },
        { SetPortPin( PORTA, 7 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_ALT), TCC0_CH3, SetExtIntADC( EXTERNAL_INT_NONE, ADC_Channel5 ) },

        // 6..9 - SERCOM/SPI (SPI) or Analog or Digital functions (Button available on pin 9)
        { SetPortPin( PORTA, 10 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_SERCOM_STD), NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_2, ADC_Channel8 ) }, // SPI MOSI
        { SetPortPin( PORTA, 11 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_SERCOM_STD), NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_NONE, ADC_Channel9 ) }, // SPI SCK
        { SetPortPin( PORTA, 14 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_SERCOM_STD), NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_NONE, ADC_Channel6 ) }, // SPI MISO
        { SetPortPin( PORTA, 15 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_SERCOM_STD), NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_1, ADC_Channel7 ) }, // Button / SPI SS (unused)

        // 10..11 Digital functions (LED available on pin 10)
        { SetPortPin( PORTA, 16 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_STD), TC1_CH0, SetExtIntADC( EXTERNAL_INT_0, No_ADC_Channel ) }, // LED
        { SetPortPin( PORTA, 17 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_STD), TC1_CH1, SetExtIntADC( EXTERNAL_INT_NONE, No_ADC_Channel ) },

        // 12..13 SERCOM/I2C (Wire) or Digital functions
        { SetPortPin( PORTA, 22 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_SERCOM_ALT), NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_6, No_ADC_Channel ) }, // SDA
        { SetPortPin( PORTA, 23 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_SERCOM_ALT), NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_NONE, No_ADC_Channel ) }, // SCL

        // 14 Digital functions
        { SetPortPin( PORTA, 27 ), PER_ATTR_DRIVE_STRONG, NOT_ON_TIMER, SetExtIntADC( EXTERNAL_INT_7, No_ADC_Channel ) },

        // 15..16  SERCOM/UART (Serial1) or Digital functions or Debug interface (SWD CLK and SWD IO)
        { SetPortPin( PORTA, 30 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_STD|PER_ATTR_SERCOM_ALT), TC2_CH0, SetExtIntADC( EXTERNAL_INT_NONE, No_ADC_Channel ) }, // TX / SWD CLK
        { SetPortPin( PORTA, 31 ), (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_STD|PER_ATTR_SERCOM_ALT), TC2_CH1, SetExtIntADC( EXTERNAL_INT_3, No_ADC_Channel ) }, // RX / SWD IO
} ;
#else
const PinDescription g_APinDescription[]=
{
	// 0..5 - Analog capable pins (DAC available on 0)
	{ PORTA,  2, PIO_MULTI, PER_ATTR_DRIVE_STRONG, (PIN_ATTR_ADC|PIN_ATTR_DAC|PIN_ATTR_DIGITAL), NOT_ON_TIMER, ADC_Channel0, EXTERNAL_INT_NONE, GCLK_CCL_NONE },
	{ PORTA,  3, PIO_MULTI, PER_ATTR_DRIVE_STRONG, (PIN_ATTR_ADC|PIN_ATTR_REF|PIN_ATTR_DIGITAL), NOT_ON_TIMER, ADC_Channel1, EXTERNAL_INT_NONE, GCLK_CCL_NONE },
	{ PORTA,  4, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_ALT), (PIN_ATTR_ADC|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER|PIN_ATTR_EXTINT), TCC0_CH0, ADC_Channel2, EXTERNAL_INT_4, GCLK_CCL_NONE },
	{ PORTA,  5, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_ALT), (PIN_ATTR_ADC|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER|PIN_ATTR_EXTINT), TCC0_CH1, ADC_Channel3, EXTERNAL_INT_5, GCLK_CCL_NONE },
	{ PORTA,  6, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_ALT), (PIN_ATTR_ADC|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), TCC0_CH2, ADC_Channel4, EXTERNAL_INT_NONE, GCLK_CCL_NONE },
	{ PORTA,  7, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_ALT), (PIN_ATTR_ADC|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), TCC0_CH3, ADC_Channel5, EXTERNAL_INT_NONE, GCLK_CCL_NONE },
	
	// 6..9 - SERCOM/SPI (SPI) or Analog or Digital functions (Button available on pin 9)
	{ PORTA, 10, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_SERCOM_STD), (PIN_ATTR_ADC|PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM|PIN_ATTR_EXTINT), NOT_ON_TIMER, ADC_Channel8, EXTERNAL_INT_2, GCLK_CCL_NONE }, // SPI MOSI
	{ PORTA, 11, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_SERCOM_STD), (PIN_ATTR_ADC|PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM), NOT_ON_TIMER, ADC_Channel9, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // SPI SCK
	{ PORTA, 14, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_SERCOM_STD), (PIN_ATTR_ADC|PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM|PIN_ATTR_EXTINT), NOT_ON_TIMER, ADC_Channel6, EXTERNAL_INT_NMI, GCLK_CCL_NONE }, // SPI MISO
	{ PORTA, 15, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_SERCOM_STD), (PIN_ATTR_ADC|PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM|PIN_ATTR_EXTINT), NOT_ON_TIMER, ADC_Channel7, EXTERNAL_INT_1, GCLK_CCL_NONE }, // Button / SPI SS (unused)
	
	// 10..11 Digital functions (LED available on pin 10)
	{ PORTA, 16, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_STD), (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER|PIN_ATTR_EXTINT), TC1_CH0, No_ADC_Channel, EXTERNAL_INT_0, GCLK_CCL_NONE }, // LED
	{ PORTA, 17, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_STD), (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), TC1_CH1, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE },
	
	// 12..13 SERCOM/I2C (Wire) or Digital functions
	{ PORTA, 22, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_SERCOM_ALT), (PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM|PIN_ATTR_EXTINT), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_6, GCLK_CCL_NONE }, // SDA
	{ PORTA, 23, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_SERCOM_ALT), (PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // SCL
	
	// 14 Digital functions
	{ PORTA, 27, PIO_MULTI, PER_ATTR_DRIVE_STRONG, (PIN_ATTR_DIGITAL|PIN_ATTR_EXTINT), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_7, GCLK_CCL_NONE },
	
	// 15..16  SERCOM/UART (Serial1) or Digital functions or Debug interface (SWD CLK and SWD IO)
	{ PORTA, 30, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_STD|PER_ATTR_SERCOM_ALT), (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER|PIN_ATTR_SERCOM), TC2_CH0, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // TX / SWD CLK
	{ PORTA, 31, PIO_MULTI, (PER_ATTR_DRIVE_STRONG|PER_ATTR_TIMER_STD|PER_ATTR_SERCOM_ALT), (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER|PIN_ATTR_SERCOM|PIN_ATTR_EXTINT), TC2_CH1, No_ADC_Channel, EXTERNAL_INT_3, GCLK_CCL_NONE }, // RX / SWD IO
} ;
#endif
#endif

const void* g_apTCInstances[TCC_INST_NUM+TC_INST_NUM]={ TCC0, TC1, TC2 } ;

// Multi-serial objects instantiation
SERCOM sercom0( SERCOM0 ) ;
SERCOM sercom1( SERCOM1 ) ;
SERCOM sercom2( SERCOM2 ) ;

#if defined(ONE_UART) || defined(TWO_UART)
Uart Serial1( SERCOM_INSTANCE_SERIAL1, PIN_SERIAL1_RX, PIN_SERIAL1_TX, PAD_SERIAL1_RX, PAD_SERIAL1_TX ) ;

void SERCOM1_Handler()
{
  Serial1.IrqHandler();
}
#endif

#if defined(TWO_UART)
Uart Serial2( SERCOM_INSTANCE_SERIAL2, PIN_SERIAL2_RX, PIN_SERIAL2_TX, PAD_SERIAL2_RX, PAD_SERIAL2_TX ) ;

void SERCOM0_Handler()
{
  Serial2.IrqHandler();
}
#endif
